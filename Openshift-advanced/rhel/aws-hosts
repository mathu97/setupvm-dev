# All in one single node cluster with custom build repo
[OSEv3:children]
masters
nodes
etcd

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
ansible_ssh_user=root
openshift_enable_excluders=false
openshift_deployment_type=origin
openshift_additional_repos=[{'id': 'origin-local-release', 'name': 'origin-local-release', 'baseurl': 'file:///opt/go/src/github.com/openshift/origin/_output/local/releases/rpms/', 'enabled': 1, 'gpgcheck': 0}]
openshift_disable_check=disk_availability,memory_availability,package_availability,package_version,docker_image_availability,docker_storage

# uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider
openshift_master_identity_providers=[{'name': 'allow_all_auth', 'login': 'true', 'challenge': 'true', 'kind': 'AllowAllPasswordIdentityProvider'}]

# Set Up AWS Configuration
# Cloud Provider Configuration
#
# Note: You may make use of environment variables rather than store
# sensitive configuration within the ansible inventory.
# For example:
#openshift_cloudprovider_aws_access_key="{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#openshift_cloudprovider_aws_secret_key="{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
#
openshift_clusterid=screeley
openshift_cloudprovider_kind=aws
openshift_cloudprovider_aws_access_key=aws_access_key_id
openshift_cloudprovider_aws_secret_key=aws_secret_access_key

[masters]
ip-172-18-5-30.ec2.internal node=True storage=True master=True openshift_schedulable=True

[etcd]
ip-172-18-5-30.ec2.internal

[nodes]
ip-172-18-5-30.ec2.internal node=True storage=True master=True openshift_schedulable=True openshift_node_group_name='node-config-all-in-one'

