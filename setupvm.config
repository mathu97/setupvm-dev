#! /bin/bash
# Some automation to setting up OSE/K8 VM's

# RERUN = N (set this to Y to rerun without registering for rhel or YS to rerun and reregistry)
# HOSTENV = rhel, centos, fedora
# INTERNALHOST yourhostname i.e. ip-172-30-16-54.internal.amazonaws.com, can override system value if needed
# OCPVERSION = (default is latest available) 3.4, 3.5 and 3.6 supported so far
# GOVERSION = 1.6, 1.7, 1.8.3, 1.8.5, 1.9.2 or yum means install golang from yum and attached repos typically will get the latest OCP version needed
# ISCLOUD = aws, gce, vsphere or local
# ZONE = if aws, then enter your aws zone i.e. us-west-2a or if GCE enter your zone i.e. us-east1-d
# MULTIZONE = true or false (allows dynamic provisioning in multiple managed zones)
# AWSKEY = the key value (only needed for AWS)
# AWSSECRET = the secret key value (only needed for AWS)
# RHNUSER = rhn support id - for use with subscription manager
# RHNPASS = rhs support password - for use with subscription manager
# ORIGINWORKDIR=(optional) centralized working directory for OpenShift Origin (default is home directory of user)
# KUBEWORKDIR=(optional) centralized working directory for Kube (default is home directory of user)
# SOURCEDIR=(optonal) where GOPATH and cloned source repositories will live (default is home directory of user)
# SETUP_TYPE=dev, (kubeadm=latest 1.6.2 with RBAC or kubeadm15 = 1.5.6 non-RBAC), aplo, aploclient or prod (default is dev) - dev will install a working dev environment to build from source, etc...
#            aplo - normal ose/k8 install minus the cloning of source repos
#            client - just base with openshift-utils and openshift-client - nothing else
#            kubeadm - latest kubeadm 1.6.2 with RBAC
#            kubeadm15 - version 1.5 of kube without RBAC
#            gluster - Installs GlusterFS cluster
#            base - just rhel sub-manager prereqs, golang, etcd - nothing else
#            cnv-dev - all in one openstack/cinder/ceph and K8
#            cnv-cinder - just cinder node
#            cnv-ceph - just ceph node
#            cnv-k8 - just k8 node for local-up-cluster.sh
#            cnv-cinder-k8 - cinder and k8 on same node
#            cnv-ceph-k8 - ceph and k8 on same node
#            cnv-k8-existing - install just k8 on existing node (either the ceph or cinder)
#            TODO: ocp_only - No Kube source is installed, only OCP
#            TODO: kube_only - No OCP source is installed, only Kube
# OCP_LOCAL_REPO= yes or no - default is no
# CONTAINER_ENGINE= docker (default), none or "" for no engines installed, values include docker, rkt, runc and none or ""        
# DOCKERVER= version # OR leave blank and it will get whatever is available/current for your repo sets
# ETCD_VER= (version# or default) (default is what is available for repo sets, version# will trigger whatever version is specified, i.e. 3.0.4)
# POOLID= use a specific known RHN pool id to attach to the instance, otherwise make blank "", the default is Employee SKU
# SKIPSOURCECLONE=yes or no - yes means that you will not clone any source repos, no is default and will clone source repos - use no to save network i/o and time, if not needed
# INSTALL_ANSIBLE=no or yes - typically don't need this, unless you want the latest ansible, otherwise just use normal atomic-openshift-utils package which is installed automatically
# FEATURE_GATES=This sets up an env variable for Feature Gate support (FEATURE_GATES=BlockVolumeSupport=true)
#     i.e.  here is an example of how to enable localPersistentVolume + BlockVolume Support
#
#                  export FEATURE_GATES=BlockVolumeSupport=true,PersistentLocalVolumes=true,LocalStorageCapacityIsolation=true,MountPropagation=true
#
# GFS_LIST=list of server hostnames separated by : (first in list is always the master)
# TODO: ALLOW_SECURITY_CONTEXT=true

RERUN=N
HOSTENV=rhel
INTERNALHOST=$HOSTNAME
PUBLICHOST=$HOSTNAME
OCPVERSION="3.7"
GOVERSION="1.9.2"
ISCLOUD=local
ZONE=local
MULTIZONE=false
AWSKEY=local
AWSSECRET=local
RHNUSER=rhn-support-account
RHNPASS=rhn-password
ORIGINWORKDIR="/etc/openshift-dev"
KUBEWORKDIR="/etc/kubernetes-dev"
SOURCEDIR="/opt"
SETUP_TYPE="dev"
OCP_LOCAL_REPO="no"
CONTAINER_ENGINE="docker"
DOCKERVER="1.12.6"
ETCD_VER="3.2.16"
#POOLID="8a85f9833e1404a9013e3cddf99305e6"
POOLID="8a85f9833e1404a9013e3cddf95a0599"
SKIPSOURCECLONE="no"
INSTALL_ANSIBLE="no"
FEATURE_GATES="BlockVolume=true,PersistentLocalVolumes=true,LocalStorageCapacityIsolation=true,MountPropagation=true"
DEFAULT_STORAGECLASS=false
ENABLE_HOSTPATH=true
FAST_CLONE=N
SKIPSUBSCRIBE=N


#Gluster specific
GFS_LIST="glusterfs1.rhs:glusterfs2.rhs:glusterfs.rhs3"

